NIX_PROFILE_DIR="${HOME}/.local/state/nix/profile"

{{ if eq .chezmoi.os "linux" -}}
# Nix
if [ -e "${NIX_PROFILE_DIR}/etc/profile.d/nix.sh" ]; then
  source "${NIX_PROFILE_DIR}/etc/profile.d/nix.sh"
fi

skip_global_compinit=1
{{ end -}}

{{ if eq .chezmoi.os "darwin" -}}
# Homebrew
{{ if eq .chezmoi.arch "arm64" -}}
if [ -f /opt/homebrew/bin/brew ]; then
  eval $(/opt/homebrew/bin/brew shellenv)
fi
{{ else -}}
if [ -f /usr/local/bin/brew ]; then
  eval $(/usr/local/bin/brew shellenv)
fi
{{ end -}}
{{ end -}}

# Aliases
alias ll='ls -alv'
alias la='ls -A'
alias l='ls -CF'
{{- if eq .chezmoi.os "darwin" }}
alias typora="open -a typora"
{{- end }}
alias wget=wget2

# Paths
BIN_DIRS=(
  "${CARGO_HOME}/bin"
  "${GOPATH}/bin"
)
for BIN_DIR in ${BIN_DIRS[@]}; do
  if [ -d "${BIN_DIR}" ]; then
    PATH="${BIN_DIR}:$PATH"
  fi
done

# FPATH
FUNC_DIRS=(
  "${NIX_PROFILE_DIR}/share/zsh/site-functions"
  /usr/share/zsh/site-functions
  /usr/share/zsh/vendor-completions
  /opt/homebrew/share/zsh/site-functions
)
for FUNC_DIR in ${FUNC_DIRS[@]}; do
  FPATH="${FUNC_DIR}:${FPATH}"
done

# Completions
autoload -Uz compinit && compinit -d "${CACHE_DIR}/zsh/zcompdump-$ZSH_VERSION"
zstyle ':completion:*' cache-path "${CACHE_DIR}/zsh/zcompcache"

# Functions
function proxyoff() {
  unset HTTP_PROXY HTTPS_PROXY ALL_PROXY http_proxy https_proxy all_proxy
}

{{ if eq .chezmoi.os "darwin" -}}
function goworkspace() {
  local serial=`system_profiler -json SPHardwareDataType | yq -r '.SPHardwareDataType[0].serial_number'`
  ssh -t workspace "tmux -CC new -A -s workspace-${serial}"
}

function launchctl() {
	case "$1" in
	"reload")
		command launchctl unload "$2" && command launchctl load "$2"
		;;
	"restart")
		command launchctl stop "$2" && command launchctl start "$2"
		;;
	*)
		command launchctl "$@"
    ;;
	esac
}

{{ end -}}

disable -r time

# Kafka
if command -v kafka 1>/dev/null 2>&1; then
  source <(kafka completion zsh) && compdef _kafka kafka
fi

# Protogen
if command -v protogen 1>/dev/null 2>&1; then
  source <(protogen completion zsh) && compdef _protogen protogen
fi

# Zoxide
if command -v zoxide 1>/dev/null 2>&1; then
  eval "$(zoxide init zsh)"
fi

BOOTSTRAP_SCRIPTS=(
  "${NIX_PROFILE_DIR}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  "${NIX_PROFILE_DIR}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

  "${HOME}/.iterm2_shell_integration.zsh"
)
for SCRIPT in ${BOOTSTRAP_SCRIPTS[@]}; do
  if [ -f "${SCRIPT}" ]; then
    source "${SCRIPT}"
  fi
done

export HISTFILE="${STATE_DIR}/zsh/history"
