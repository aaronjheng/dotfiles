unsetopt beep

# History
export HISTFILE="${STATE_DIR}/zsh/history"
HISTSIZE=2000
SAVEHIST=1000

# Prompt
PROMPT='%n@%m:%1~ %% '
if [ ! -z "$SSH_CLIENT" ]; then
  PROMPT='%F{green}%n@%m%f:%1~ %% '
fi

# Key bindings
bindkey -e

# Default programs
export EDITOR="vim"
export VISUAL="vim"

# Disable builtin commands
disable -r time

# Aliases
alias ll='ls -alv'
alias la='ls -A'
alias l='ls -CF'
{{- if eq .chezmoi.os "darwin" }}
alias typora="open -a typora"
{{- end }}
alias wget=wget2

# FPATH
FUNC_DIRS=(
  "/nix/var/nix/profiles/default/share/zsh/site-functions"
  "${NIX_PROFILE_DIR}/share/zsh/site-functions"
  /usr/share/zsh/site-functions
  /usr/share/zsh/vendor-completions
  /opt/homebrew/share/zsh/site-functions
)
for FUNC_DIR in ${FUNC_DIRS[@]}; do
  FPATH="${FUNC_DIR}:${FPATH}"
done

# Completions
autoload -Uz compinit && compinit -d "${CACHE_DIR}/zsh/zcompdump-${ZSH_VERSION}"
zstyle ':completion:*' cache-path "${CACHE_DIR}/zsh/zcompcache"

# Kafka
if command -v kafka 1>/dev/null 2>&1; then
  source <(kafka completion zsh) && compdef _kafka kafka
fi

# Protogen
if command -v protogen 1>/dev/null 2>&1; then
  source <(protogen completion zsh) && compdef _protogen protogen
fi

# Extensions
# Zoxide
if command -v zoxide 1>/dev/null 2>&1; then
  eval "$(zoxide init zsh)"
fi

# Atuin
if command -v atuin 1>/dev/null 2>&1; then
  eval "$(atuin init zsh)"
fi

# zsh-autosuggestions
if [ -f "${NIX_PROFILE_DIR}/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
  source "${NIX_PROFILE_DIR}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

# zsh-syntax-highlighting
if [ -f "${NIX_PROFILE_DIR}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "${NIX_PROFILE_DIR}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

# Functions
function proxyon() {
  export HTTP_PROXY=http://127.0.0.1:7890
  export HTTPS_PROXY=http://127.0.0.1:7890
  export ALL_PROXY=socks5://127.0.0.1:7890
  export http_proxy=http://127.0.0.1:7890
  export https_proxy=http://127.0.0.1:7890
  export all_proxy=socks5://127.0.0.1:7890
}

function proxyoff() {
  unset HTTP_PROXY HTTPS_PROXY ALL_PROXY http_proxy https_proxy all_proxy
}

function ipython() {
  nix-shell -p python3Packages.ipython --command "ipython $@"
}

{{ if eq .chezmoi.os "darwin" -}}
function goworkspace() {
  local serial=`system_profiler -json SPHardwareDataType | yq -r '.SPHardwareDataType[0].serial_number'`
  ssh -t workspace "tmux -CC new -A -s workspace-${serial}"
}

function launchctl() {
	case "$1" in
	"reload")
		command launchctl unload "$2" && command launchctl load "$2"
		;;
	"restart")
		command launchctl stop "$2" && command launchctl start "$2"
		;;
	*)
		command launchctl "$@"
    ;;
	esac
}

{{ end -}}
